var mapData = 'Map,Card,Stack Size,Reward,Tier,,,,,,
    Acid Caverns,,,,,,,,,,
    Academy,,,,,,,,,,
    Alleyways,Home,3,Exceptional Gem 1-20% Qual,UsefulAF,https://www.poewiki.net/wiki/Support_gem#Exceptional_Support_Gems,,,,,
    Alleyways,Assassin's Favour,9,Dagger,Situational,https://www.poewiki.net/wiki/List_of_unique_daggers,,,,,
    Alleyways,The Carrion Crow,4,Life Armour,ActualGarbage,,,,,,
    Alleyways,The Life Thief,6,Zerphi's Heart,Situational,https://www.poewiki.net/wiki/Zerphi%27s_Heart,,,,,
    Alleyways,The Poet,9,Blood of Corruption (corrupted),Situational,https://www.poewiki.net/wiki/Blood_of_Corruption,,,,,
    Alleyways,The Blazing Fire,6,Chin Sol,Situational,https://www.poewiki.net/wiki/Chin_Sol,,,,,
    Alleyways,The Journalist,10,Helmet Double-Veiled Item,Meh,,,,,,
    Alleyways,The Saint's Treasure,10,2x Exalted Orb,UsefulAF,,,,,,
    Alleyways,The Side Quest,5,20x Scouting Report,UsefulAF,,,,,,
    Ancient City,,,,,,,,,,
    Arachnid Nest,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Arachnid Nest,The Gambler,5,Divination Card,Meh,,,,,,
    Arachnid Nest,The Trial,7,Map T15 (corrupted),Situational,,,,,,
    Arachnid Nest,The Web,8,Weapon of Crafting,Situational,,,,,,
    Arachnid Tomb,The Web,8,Weapon of Crafting,Situational,,,,,,
    Arachnid Tomb,The Side Quest,5,20x Scouting Report,UsefulAF,,,,,,
    Arcade,Assassin's Favour,9,Dagger,Situational,https://www.poewiki.net/wiki/List_of_unique_daggers,,,,,
    Arcade,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Arcade,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Arcade,The Gambler,5,Divination Card,Meh,,,,,,
    Arcade,The Poet,9,Blood of Corruption (corrupted),Situational,https://www.poewiki.net/wiki/Blood_of_Corruption,,,,,
    Arcade,The Saint's Treasure,10,2x Exalted Orb,UsefulAF,,,,,,
    Arcade,Home,3,Exceptional Gem 1-20% Qual,UsefulAF,https://www.poewiki.net/wiki/Support_gem#Exceptional_Support_Gems,,,,,
    Arcade,The Carrion Crow,4,Life Armour,ActualGarbage,,,,,,
    Arcade,The Tyrant,9,Merrciless Weapon iLVL 100,ActualGarbage,,,,,,
    Arid Lake,The Fishmonger,4,Albino Rhoa Feather,GodTier,https://www.poewiki.net/wiki/Albino_Rhoa_Feather,,,,,
    Arid Lake,The Rabid Rhoa,4,Malicious Gemini Claw iLVL 83,Meh,,,,,,
    Armoury,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Armoury,Merciless Armament,4,Merciless Two-Hand Weapon ILVL 100,ActualGarbage,,,,,,
    Armoury,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Armoury,The Gambler,5,Divination Card,Meh,,,,,,
    Armoury,The Patient,8,The Nurse,Situational,,,,,,
    Armoury,The Side Quest,5,20x Scouting Report,UsefulAF,,,,,,
    Armoury,The Trial,7,Map T15 ( corrupted),Situational,,,,,,
    Armoury,The Carrion Crow,4,Life Armour,ActualGarbage,,,,,,
    Armoury,The Warlord,6,6L Coronal Maul iLvl 83,Situational,,,,,,
    Arsenal,Abandoned Wealth,5,3x Exalted Orb,UsefulAF,,,,,,
    Arsenal,Dying Anguish,8,L19 Gem Alt Qual 19%,Situational,,,,,,
    Arsenal,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Arsenal,Jack in the Box,4,Item,Situational,,,,,,
    Arsenal,Rats,8,Rat's Nest,Situational,https://www.poewiki.net/wiki/Rat%27s_Nest,,,,,
    Arsenal,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Arsenal,The Gambler,5,Divination Card,Meh,,,,,,
    Arsenal,The Patient,8,The Nurse,Situational,,,,,,
    Arsenal,The Warlord,6,6L Coronal Maul iLvl 84,Situational,,,,,,
    Arsenal,Three Faces in the Dark,7,3x Chaos Orb,Situational,,,,,,
    Arsenal,The Carrion Crow,4,Life Armour,ActualGarbage,,,,,,
    Arsenal,Merciless Armament,4,Merciless Two-Hand Weapon ILVL 100,ActualGarbage,,,,,,
    Arsenal,The Tireless Extractor,8,10x Oil,Situational,,,,,,
    Ashen Wood,,,,,,,,,,
    Atoll,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Atoll,Lantador's Lost Love,7,Two-Stone Ring,Situational,,,,,,
    Atoll,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Atoll,The Gambler,5,Divination Card,Meh,,,,,,
    Atoll,The Journey,3,Harbinger's Orb,Situational,,,,,,
    Atoll,The Spark and the Flame,2,Berek's Respite,Situational,https://www.poewiki.net/wiki/Berek%27s_Respite,,,,,
    Atoll,The Tinkerer's Table,5,5x Fossil,Situational,,,,,,
    Atoll,The Wind,7,Windripper,Situational,https://www.poewiki.net/wiki/Windripper,,,,,
    Atoll,The Catch,18,Fishing Rod Incubated iLvl100,GodTier,https://www.poewiki.net/wiki/Fishing_Rod,,,,,
    Atoll,Prosperity,10,Perandus' Gold Ring,ActualGarbage,,,,,,
    Atoll,The Old Man,12,Fishing Rod Two-Implicit (corrupted),GodTier,https://www.poewiki.net/wiki/Fishing_Rod,,,,,
    Barrows,The Fox,6,L20 Gem,Situational,,,,,,
    Barrows,Loyalty,5,3x Orb of Fusing,Situational,,,,,,
    Barrows,Pride of the First Ones,7,Farrul's Fur,Situational,https://www.poewiki.net/wiki/Farrul%27s_Fur,,,,,
    Barrows,The One With All,6,Le Heup of All (corrupted),Situational,https://www.poewiki.net/wiki/Le_Heup_of_All,,,,,
    Barrows,The Shepherd's Sandals,3,Boots iLVL 100 Two-Implicit (corrupted),Situational,,,,,,
    Bazzar,,,,,,,,,,
    Beach,Prosperity,10,Perandus' Gold Ring,ActualGarbage,,,,,,
    Beach,Lantador's Lost Love,7,Two-Stone Ring,Situational,,,,,,
    Beach,The Destination,9,Watcher's EYe Two-Implicit (corrupted),Situational,,,,,,
    Beach,The Catch,18,Fishing Rod Incubated iLvl100,GodTier,https://www.poewiki.net/wiki/Fishing_Rod,,,,,
    Beach,The Journey,3,Harbinger's Orb,Situational,,,,,,
    Belfry,The Carrion Crow,4,Life Armour,ActualGarbage,,,,,,
    Belfry,The Enlightened,6,L3 Enlighten,Situational,,,,,,
    Belfry,The Wrath,8,10x Chaos Orb,UsefulAF,,,,,,
    Belfry,The Demon,10,HeadHunter (Two-Implicit Corrupted),Situational,,,,,,
    Basilica,,,,,,,,,,
    Bog,,,,,,,,,,
    Bone Crypt,Coveted Possession,9,5x Regal Orb,Situational,,,,,,
    Bone Crypt,Grave Knowledge,6,Summon Raging Spirit 20% Qual,Situational,,,,,,
    Bone Crypt,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Bone Crypt,The Celestial Justicar,6,6L Astral Plate,Situational,,,,,,
    Bone Crypt,The Craving,4,Unending Hunger,Situational,https://www.poewiki.net/wiki/Unending_Hunger,,,,,
    Bone Crypt,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Bone Crypt,The Forsaken,7,Umbilicus Immortalis,Situational,https://www.poewiki.net/wiki/Umbilicus_Immortalis,,,,,
    Bone Crypt,The Gambler,5,Divination Card,Meh,,,,,,
    Bone Crypt,The Summoner,6,Minion Gem 20% Qual,Situational,,,,,,
    Bone Crypt,The Trial,7,Map T15 (corrupted),Situational,,,,,,
    Bone Crypt,The Wretched,6,Belt,Situational,,,,,,
    Bone Crypt,The Rabbit's Foot,8,10x Incursion Vial,Situational,,,,,,
    Burial Chambers,,,,,,,,,,
    Cage,,,,,,,,,,
    Caldera,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Caldera,From Bone to Ashes,8,Ngamahu's Flame Two-Implicit (corrupted),Situational,https://www.poewiki.net/wiki/Ngamahu%27s_Flame,,,,,
    Caldera,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Caldera,The Gambler,5,Divination Card,Meh,,,,,,
    Caldera,The King's Heart,8,Kaom's Heart,Situational,https://www.poewiki.net/wiki/Kaom%27s_Heart,,,,,
    Caldera,The Battle Born,5,Axe,Situational,,,,,,
    Canyon,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Canyon,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Canyon,The Gambler,5,Divination Card,Meh,,,,,,
    Canyon,The Trial,7,Map T15 (corrupted),Situational,,,,,,
    Canyon,The Scavenger,8,Carcass Jack,Situational,https://www.poewiki.net/wiki/Carcass_Jack,,,,,
    Carcass,,,,,,,,,,
    Castle Ruins,Rain of Chaos,8,Chaos Orb,Situational,,,,,,
    Castle Ruins,The Fox,6,L20 Gem,Situational,,,,,,
    Castle Ruins,The Mercenary,5,Shield (corrupted,Situational,https://www.poewiki.net/wiki/List_of_unique_shields,,,,,
    Castle Ruins,The Road to Power,7,Runic One-Hand Weapon iLvl 100,Meh,,,,,,
    Castle Ruins,The Betrayal,9,Maligaro's Virtuosity,Situational,https://www.poewiki.net/wiki/Maligaro%27s_Virtuosity,,,,,
    Castle Ruins,The Long Watch,3,The Vigil,Situational,https://www.poewiki.net/wiki/The_Vigil,,,,,
    Castle Ruins,The Harvester,11,The Harvest,Situational,,,,,,
    Castle Ruins,The Tyrant,9,Merciless Weapon iLevel 100,Situational,,,,,,
    Castle Ruins,The Side Quest,5,20x Scouting Report,UsefulAF,,,,,,
    Cells,The Soul,9,Soul Taker,Situational,https://www.poewiki.net/wiki/Soul_Taker,,,,,
    Cells,The Chains that Bind,11,6L Body Armor,6L Body Armor,,,,,,
    Cells,The Warden,4,Amulet (corrupted),ActualGarbage,,,,,,
    Cells,Harmony of Souls,9,9x Shrieking Essence,Situational,,,,,,
    Cells,The Penitent,5,Unset Ring,Situational,,,,,,
    Cells,The Dungeon Master,7,Belt (double-influenced item),Situational,,,,,,
    Cells,The Nurse,8,The Doctor,UsefulAF,https://www.poewiki.net/wiki/The_Doctor,,,,,
    Cemetery,Brother's Gift,1,5x Divine Orb,GodTier,,,,,,
    Cemetery,Brother's Stash,1,5x Exalted Orb,UsefulAF,,,,,,
    Cemetery,Cursed Words,13,Maw of Mischief,Situational,https://www.poewiki.net/wiki/Maw_of_Mischief,,,,,
    Cemetery,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Cemetery,Struck by Lightning,3,Electrocuting Jewelry iLvl 76,ActualGarbage,,,,,,
    Cemetery,The Cacophony,8,3x Deafening Essence (boss drop),Situational,,,,,,
    Cemetery,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Cemetery,The Gambler,5,Divination Card,Meh,,,,,,
    Cemetery,The One with All,6,Le Heup of All (corrupted),Situational,https://www.poewiki.net/wiki/Le_Heup_of_All,,,,,
    Cemetery,The Union,7,10x Gem Cutters Prism,Situational,,,,,,
    Cemetery,Struck by Lightning,3,Electrocuting Jewelry iLvl 76,ActualGarbage,,,,,,
    Cemetery,Ambitious Obsession,4,Skitterking Delirium Orb,Istuational,,,,,,
    Cemetery,The Coming Storm,8,Lightning Coil,Situational,https://www.poewiki.net/wiki/Lightning_Coil,,,,,
    Cemetery,More is Never Enough,7,Gilded Scarab,Situational,,,,,,
    Chateau,Home,3,Exceptional Gem 1-20% Qual,UsefulAF,https://www.poewiki.net/wiki/Support_gem#Exceptional_Support_Gems,,,,,
    Chateau,Boon of Justice,6,Offering to the Godess,Situational,,,,,,
    Chateau,The Carrion Crow,4,Life Armour,ActualGarbage,,,,,,
    Chateau,The Opulent,5,Ring iLvl 100,Meh,,,,,,
    Chateau,The Scavenger,8,Carcass Jack,Situational,https://www.poewiki.net/wiki/Carcass_Jack,,,,,
    Chateau,Brotherhood in Exile,5,One With Nothing (corrupted),Situational,https://www.poewiki.net/wiki/One_With_Nothing,,,,,
    Chateau,The Lord of Celebration,4,Sceptre of Celebration Shaper Item,Situational,,,,,,
    Channel,,,,,,,,,,
    City Square,Home,3,Exceptional Gem 1-20% Qual,UsefulAF,https://www.poewiki.net/wiki/Support_gem#Exceptional_Support_Gems,,,,,
    City Square,Three Voices,3,3x Essence,Situational,,,,,,
    City Square,The Carrion Crow,4,Life Armour,ActualGarbage,,,,,,
    City Square,The Life Thief,6,Zerphi's Heart,Situational,https://www.poewiki.net/wiki/Zerphi%27s_Heart,,,,,
    City Square,The Blazing Fire,6,Chin Sol,Situational,https://www.poewiki.net/wiki/Chin_Sol,,,,,
    City Square,The Journalist,10,Helmet Double-Veiled Item,Meh,,,,,,
    Cold River,Mitts,5,Gloves,Situational,,,,,,
    Cold River,The Lunaris Priestess,5,Sire of Shards,Situational,https://www.poewiki.net/wiki/Sire_of_Shards,,,,,
    Cold River,The Sun ,7,Rise of the Phoenix,Situational,https://www.poewiki.net/wiki/Rise_of_the_Phoenix,,,,,
    Cold River,The Twilight Moon,6,The Twilight Temple,Situational,https://www.poewiki.net/wiki/The_Twilight_Temple,,,,,
    Cold River,Ambitious Obsession,4,Skitterking Delirium Orb,Istuational,,,,,,
    Cold River,Boundless Realms,4,Map,Situational,,,,,,
    Cold River,Dialla's Subjugation,7,Support Gem 23% Qual (corrupted),Situational,,,,,,
    Cold River,More is Never Enough,7,Gilded Scarab,Situational,,,,,,
    Cold River,Forbidden Power,4,Balefire (corrupted) (boss drop),Situational,,,,,,
    Colonnade,Dying Anguish,8,L19 Gem Alt Qual 19%,Situational,,,,,,
    Colonnade,Jack in the Box,4,Item,Situational,,,,,,
    Colonnade,Merciless Armament,4,Merciless Two-Hand Weapon ILVL 100,ActualGarbage,,,,,,
    Colonnade,Struck By Lightning,3,Electrocuting Jewelry iLvl 76,ActualGarbage,,,,,,
    Colonnade,The Carrion Crow,4,Life Armour,ActualGarbage,,,,,,
    Colonnade,The Warlord,6,6L Coronal Maul iLvl 85,Situational,,,,,,
    Colonnade,The Patient,8,The Nurse,Situational,,,,,,
    Colonnade,Gemcutter's Promise,3,Gem 20% Qual,Situational,,,,,,
    Colosseum,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Colosseum,The Deceiver,4,Belt of the Deceiver (corrupted),Situational,https://www.poewiki.net/wiki/Belt_of_the_Deceiver,,,,,
    Colosseum,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Colosseum,The Gambler,5,Divination Card,Meh,,,,,,
    Colosseum,The Gladiator,5,Nightmare Bascinet,Situational,,,,,,
    Colosseum,The Carrion Crow,4,Life Armour,ActualGarbage,,,,,,
    Colosseum,The Sword King's Salute,7,Daresso's Salute,Situational,https://www.poewiki.net/wiki/Daresso%27s_Salute,,,,,
    Colosseum,The Visionary,6,Lioneye's Vision,Situational,https://www.poewiki.net/wiki/Lioneye%27s_Vision,,,,,
    Colosseum,The Last One Standing,10,Atziri's Disfavour (Boss Drop),Situational,https://www.poewiki.net/wiki/Atziri%27s_Disfavour,,,,,
    Colosseum,The Carrion Crow,4,Life Armour,ActualGarbage,,,,,,
    Colosseum,The King's Blade,5,Bloodthirsty Eternal Sword iLVL 66,ActualGarbage,,,,,,
    Colosseum,Unchained,4,Facebreaker Two-Implicit Corrupted,Situational,,,,,,
    Coral Ruins,Prosperity,10,Perandus' Gold Ring,ActualGarbage,,,,,,
    Coral Ruins,The Deep Ones,5,Tidebreaker,Situational,https://www.poewiki.net/wiki/Tidebreaker,,,,,
    Coral Ruins,Lantador's Lost Love,7,Two-Stone Ring,Situational,,,,,,
    Coral Ruins,The Vast,7,Song of the Sirens,Situational,,,,,,
    Coral Ruins,The Catch,18,Fishing Rod Incubated iLvl100,GodTier,https://www.poewiki.net/wiki/Fishing_Rod,,,,,
    Coral Ruins,The Old Man,12,Fishing Rod Two-Implicit (corrupted),GodTier,https://www.poewiki.net/wiki/Fishing_Rod,,,,,
    Coral Ruins,The Tyrant,9,Merciless Weapon iLevel 100,Situational,,,,,,
    Coral Ruins,The Journey,3,Harbinger's Orb,Situational,,,,,,
    Conservatory,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Conservatory,Boon of Justice,6,Offering to the Godess,Situational,,,,,,
    Conservatory,The Carrion Crow,4,Life Armour,ActualGarbage,,,,,,
    Conservatory,Brotherhood in Exile,5,One With Nothing (corrupted),Situational,https://www.poewiki.net/wiki/One_With_Nothing,,,,,
    Conservatory,The Lord of Celebration,4,Sceptre of Celebration Shaper Item,Situational,,,,,,
    Conservatory,The Opulent,5,Ring iLvl 100,Meh,,,,,,
    Core,The Soul,9,Soul Taker,Situational,https://www.poewiki.net/wiki/Soul_Taker,,,,,
    Core,Vinia's Token,5,10x Orb of Regret,UsefulAF,,,,,,
    Core,The Hunger,9,Taste of Hate,Situational,https://www.poewiki.net/wiki/Taste_of_Hate,,,,,
    Core,The Oath,6,Death's Oath,Situational,https://www.poewiki.net/wiki/Death%27s_Oath,,,,,
    Core,The Surveyor,4,Map (T14),ActualGarbage,,,,,,
    Core,Vile Power,5,Doomfletch,Situational,https://www.poewiki.net/wiki/Doomfletch,,,,,
    Core,The Nurse,8,The Doctor,UsefulAF,https://www.poewiki.net/wiki/The_Doctor,,,,,
    Core,Echoes of Love,3,Fidelitas' Spike Two-Implicit Corrupted,Situational,https://www.poewiki.net/wiki/Fidelitas%27_Spike,,,,,
    Core,Shard of Fate,4,Vivid Jewel,ActualGarbage,,,,,,
    Core,The Insatiable,3,The Harvest (corrupted),Situational,https://www.poewiki.net/wiki/The_Harvest,,,,,
    Core,The Beast,6,Belly of the Beast,Situational,https://www.poewiki.net/wiki/Belly_of_the_Beast,,,,,
    Core,Broken Promises,2,Diamond Ring iLVL 87 Two-Implicit Synthesised,Situational,,,,,,
    Courtyard,Three Voices,3,3x Essence,Situational,,,,,,
    Courtyard,The Porcupine,6,6L Short Bow iLvl 49,UsefulAF,,,,,,
    Courtyard,Emperor's Luck,5,5x Currency,Meh,,,,,,
    Courtyard,Rain Tempter,9,Map T3,ActualGarbage,,,,,,
    Courtyard,Struck By Lightning,3,Electrocuting Jewelry iLvl 76,ActualGarbage,,,,,,
    Courtyard,The Carrion Crow,4,Life Armour,ActualGarbage,,,,,,
    Courtyard,The Stormcaller,4,Agnerod Staff,Situational,,,,,,
    Courtyard,Thunderous Skies,5,Storm Cloud,Situational,https://www.poewiki.net/wiki/Storm_Cloud,,,,,
    Courtyard,Peaceful Moments,5,Timeless Jewel,Situational,https://www.poewiki.net/wiki/Timeless_Jewel,,,,,
    Courtyard,The Easy Stroll,2,Map T15 8 Mods (corrupted),Situational,,,,,,
    Courtyard,The Fox in the Brambles,7,Bramblejack Two-Implicit (corrupted),Situational,https://www.poewiki.net/wiki/Bramblejack,,,,,
    Courtyard,A Mother's Parting Gift,6,Fertile Mind (corrupted),Situational,https://www.poewiki.net/wiki/Fertile_Mind,,,,,
    Courthouse,,,,,,,,,,
    Coves,Prosperity,10,Perandus' Gold Ring,ActualGarbage,,,,,,
    Coves,The Deep Ones,5,Tidebreaker,Situational,https://www.poewiki.net/wiki/Tidebreaker,,,,,
    Coves,Lantador's Lost Love,7,Two-Stone Ring,Situational,,,,,,
    Coves,Scholar of the Seas,7,Mao Kun,Situational,https://www.poewiki.net/wiki/Mao_Kun,,,,,
    Coves,The Formless Sea,7,Varunastra,Situational,https://www.poewiki.net/wiki/Tidebreaker,,,,,
    Coves,The Rite of Elements,5,L21 Golem Gem (corrupted),Situational,,,,,,
    Coves,The Vast,7,Song of the Sirens,Situational,,,,,,
    Coves,A Stone Perfected,5,Jewel Primordial 1-2 Implicit (corrupted),Situational,,,,,,
    Coves,From Bone to Ashes,8,Ngamahu's Flame Two-Implicit (corrupted),Situational,https://www.poewiki.net/wiki/Ngamahu%27s_Flame,,,,,
    Coves,The Primordial,5,Jewel (Primordial unique),Situational,,,,,,
    Coves,The Catch,18,Fishing Rod Incubated iLvl100,GodTier,https://www.poewiki.net/wiki/Fishing_Rod,,,,,
    Coves,The Old Man,12,Fishing Rod Two-Implicit (corrupted),GodTier,https://www.poewiki.net/wiki/Fishing_Rod,,,,,
    Coves,The Journey,3,Harbinger's Orb,Situational,,,,,,
    Crater,The Standoff,3,Rustic Stash,Sirtuational,,,,,,
    Crimson Temple,The Blazing Fire,6,Chin Sol,Situational,https://www.poewiki.net/wiki/Chin_Sol,,,,,
    Crimson Temple,The Cacophony,8,3x Deafening Essence,Situational,,,,,,
    Crimson Temple,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Crimson Temple,The Enlightened,6,L3 Enlighten,Situational,,,,,,
    Crimson Temple,The Gambler,5,Divination Card,Meh,,,,,,
    Crimson Temple,The Journalist,10,Helmet Double-Veiled Item,Meh,,,,,,
    Crimson Temple,The Life Thief,6,Zerphi's Heart,Situational,https://www.poewiki.net/wiki/Zerphi%27s_Heart,,,,,
    Crimson Temple,The Lord of Celebration,4,Sceptre of Celebration Shaper Item,Situational,,,,,,
    Crimson Temple,The Opulent,5,Ring iLvl 100,Meh,,,,,,
    Crimson Temple,The Apothecary,5,Mageblood,GodTier,https://www.poewiki.net/wiki/Mageblood,,,,,
    Crimson Township,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Crimson Township,The Gambler,5,Divination Card,Meh,,,,,,
    Crimson Township,Home,3,Exceptional Gem 1-20% Qual,UsefulAF,https://www.poewiki.net/wiki/Support_gem#Exceptional_Support_Gems,,,,,
    Crimson Township,The Carrion Crow,4,Life Armour,ActualGarbage,,,,,,
    Crimson Township,The Opulent,5,Ring iLvl 100,Meh,,,,,,
    Crimson Township,The Apothecary,5,Mageblood,GodTier,https://www.poewiki.net/wiki/Mageblood,,,,,
    Crimson Township,The Lord of Celebration,4,Sceptre of Celebration Shaper Item,Situational,,,,,,
    Crystal Ore,Three Voices,3,3x Essence,Situational,,,,,,
    Crystal Ore,A Sea of Blue,3,13x Orb of Alteration,Situational,,,,,,
    Crystal Ore,Gift of the Gemling Queen,9,L20 Support Gem,Situational,,,,,,
    Crystal Ore,The Endurance,4,Vivid Crimson Jewel,ActualGarbage,,,,,,
    Crystal Ore,Treasure Hunter,7,Vaults of Atziri (corrupted),Situational,https://www.poewiki.net/wiki/Vaults_of_Atziri,,,,,
    Crystal Ore,Volatile Power,9,Vaal Gem 20%Qual (Corrupted),Meh,,,,,,
    Crystal Ore,Buried Treasure,3,Sulphite Scarab,Situational,,,,,,
    Crystal Ore,The Drunken Aristocrat,8,Divination DIstillate,Situational,https://www.poewiki.net/wiki/Divination_Distillate,,,,,
    Crystal Ore,The Jeweller's Boon,5,5L Body Armour Influenced Item,Situational,,,,,,
    Crystal Ore,Time-Lost Relic,10,League-Specific Item,Situational,,,,,,
    Crystal Ore,Bijoux,3,Cluster Jewel iLvl 79,Situational,,,,,,
    Crystal Ore,The Wolf,5,Rigwald Item,Situational,,,,,,
    Crystal Ore,Hunter's Reward,3,The Taming,Situational,https://www.poewiki.net/wiki/The_Taming,,,,,
    Crystal Ore,Immortal Resolve,6,6L Body Armour Influenced Item,Situational,,,,,,
    Cursed Crypt,Grave Knowledge,6,Summon Raging Spirit 20% Qual,Situational,,,,,,
    Cursed Crypt,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Cursed Crypt,The Celestial Justicar,6,6L Astral Plate,Situational,,,,,,
    Cursed Crypt,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Cursed Crypt,The Gambler,5,Divination Card,Meh,,,,,,
    Cursed Crypt,The Trial,7,Map T15 (corrupted),Situational,,,,,,
    Cursed Crypt,The Wretched,6,Belt,Situational,,,,,,
    Cursed Crypt,The Rabbit's Foot,8,10x Incursion Vial,Situational,,,,,,
    Cursed Crypt,The Forsaken,7,Umbilicus Immortalis,Situational,https://www.poewiki.net/wiki/Umbilicus_Immortalis,,,,,
    Dark Forest,,,,,,,,,,
    Defiled Cathedral,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Defiled Cathedral,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Defiled Cathedral,The Gambler,5,Divination Card,Meh,,,,,,
    Defiled Cathedral,The Carrion Crow,4,Life Armour,ActualGarbage,,,,,,
    Defiled Cathedral,The Enlightened,6,L3 Enlighten,Situational,,,,,,
    Defiled Cathedral,The Life Thief,6,Zerphi's Heart,Situational,https://www.poewiki.net/wiki/Zerphi%27s_Heart,,,,,
    Defiled Cathedral,The Apothecary,5,Mageblood,GodTier,https://www.poewiki.net/wiki/Mageblood,,,,,
    Defiled Cathedral,The Blazing Fire,6,Chin Sol,Situational,https://www.poewiki.net/wiki/Chin_Sol,,,,,
    Defiled Cathedral,The Journalist,10,Helmet Double-Veiled Item,Meh,,,,,,
    Desert,,,,,,,,,,
    Desert Spring,Earth Drinker,5,Granite Flask,Situational,,,,,,
    Desert Spring,The Carrion Crow,4,Life Armour,ActualGarbage,,,,,,
    Desert Spring,Baited Expectations,8,Fishing Item,GodTier,,,,,,
    Desert Spring,Acclimatisation,2,20x Orb of Alteration,Situational,,,,,,
    Desert Spring,Imperial Legacy,22,6L Imperial Bow iLvl 099,UsefulAF,,,,,,
    Desert Spring,A Note in the Wind,4,Asenath's Chant,Situational,https://www.poewiki.net/wiki/Asenath%27s_Chant,,,,,
    Desert Spring,Ambitious Obsession,4,Skittering Delrium Orb,Situational,,,,,,
    Desert Spring,The Tumbleweed,2,Diamond RIng of Redemption iLVL 100 Redeemer Item,Situational,,,,,,
    Desert Spring,More is never Enough,7,Gilded Scarab,Situational,,,,,,
    Dig,Gift of the Gemling Queen,9,L20 Support Gem,Situational,,,,,,
    Dig,The Endurance,4,Vivid Crimson Jewel,ActualGarbage,,,,,,
    Dig,Volatile Power,9,Vaal Gem 20%Qual (Corrupted),Meh,,,,,,
    Dig,Ambitious Obsession,4,Skittering Delrium Orb,Situational,,,,,,
    Dig,Buried Treasure,3,Sulphite Scarab,Situational,,,,,,
    Dig,Time-Lost Relic,10,League-Specific Item,Situational,,,,,,
    Dig,Bijoux,3,Cluster Jewel iLvl 80,Situational,,,,,,
    Dig,The Wolf,5,Rigwald Item,Situational,,,,,,
    Dig,More is Never Enough,7,Gilded Scarab,Situational,,,,,,
    Dry Sea,A Note in the Wind,4,Asenath's Chant,Situational,https://www.poewiki.net/wiki/Asenath%27s_Chant,,,,,
    Dry Sea,Baited Expectations,8,Fishing Item,GodTier,,,,,,
    Dry Sea,The Tumbleweed,2,Diamond RIng of Redemption iLVL 100 Redeemer Item,Situational,,,,,,
    Dry Sea,Earth Drinker,5,Granite Flask,Situational,,,,,,
    Dry Sea,Acclimatisation,2,20x Orb of Alteration,Situational,,,,,,
    Dry Sea,Imperial Legacy,22,6L Imperial Bow iLvl 100,UsefulAF,,,,,,
    Dry Sea,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Dry Sea,The Gambler,5,Divination Card,Meh,,,,,,
    Dunes,A Note in the Wind,4,Asenath's Chant,Situational,https://www.poewiki.net/wiki/Asenath%27s_Chant,,,,,
    Dunes,Acclimatisation,2,20x Orb of Alteration,Situational,,,,,,
    Dunes,Baited Expectations,8,Fishing Item,GodTier,,,,,,
    Dunes,Earth Drinker,5,Granite Flask,Situational,,,,,,
    Dunes,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Dunes,Imperial Legacy,22,6L Imperial Bow iLvl 100,UsefulAF,,,,,,
    Dunes,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Dunes,The Gambler,5,Divination Card,Meh,,,,,,
    Dunes,The Trial,7,Map T15 (corrupted),Situational,,,,,,
    Dunes,The Tumbleweed,2,Diamond RIng of Redemption iLVL 100 Redeemer Item,Situational,,,,,,
    Dungeon,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Dungeon,The Chains That Bind,11,6L Body Armor,UsefulAF,,,,,,
    Dungeon,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Dungeon,The Gambler,5,Divination Card,Meh,,,,,,
    Dungeon,The Warden,4,Amulet (corrupted),ActualGarbage,,,,,,
    Dungeon,The Penitent,5,Unset Ring,Situational,,,,,,
    Dungeon,The Dungeon Master,7,Belt Double-Influenced Item,Situational,,,,,,
    Estuary,,,,,,,,,,
    Excavation,Gift of the Gemling Queen,9,L20 Support Gem,Situational,,,,,,
    Excavation,The Endurance,4,Vivid Crimson Jewel,ActualGarbage,,,,,,
    Excavation,Treasure Hunter,7,Vaults of Atziri (corrupted),Situational,https://www.poewiki.net/wiki/Vaults_of_Atziri,,,,,
    Excavation,Volatile Power,9,Vaal Gem 20%Qual (Corrupted),Meh,,,,,,
    Excavation,Buried Treasure,3,Sulphite Scarab,Situational,,,,,,
    Excavation,Time-Lost Relic,10,League-Specific Item,Situational,,,,,,
    Excavation,Bijoux,3,Cluster Jewel iLvl 81,Situational,,,,,,
    Excavation,The Wolf,5,Rigwald Item,Situational,,,,,,
    Excavation,Hunter's Reward,3,The Taming,Situational,https://www.poewiki.net/wiki/The_Taming,,,,,
    Factory,Rats,8,Rat's Nest,Situational,https://www.poewiki.net/wiki/Rat%27s_Nest,,,,,
    Factory,The Carrion Crow,4,Life Armour,ActualGarbage,,,,,,
    Factory,Three Faces in the Dark,7,3x Chaos Orb,Situational,,,,,,
    Factory,Abandoned Wealth,5,3x Exalted Orb,UsefulAF,,,,,,
    Factory,The Tireless Extractor,8,10x Oil,Situational,,,,,,
    Fields,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Fields,The Fox,6,L20 Gem,Situational,,,,,,
    Fields,The Scarred Meadow,9,Wake of Destruction,Situational,https://www.poewiki.net/wiki/Wake_of_Destruction,,,,,
    Fields,Rain of Chaos,8,Chaos Orb,Situational,,,,,,
    Fields,The Carrion Crow,4,Life Armour,ActualGarbage,,,,,,
    Fields,Tranquility,7,Voltaxic Rift,Situational,https://www.poewiki.net/wiki/Voltaxic_Rift,,,,,
    Fields,Ambitious Obsession,4,Skittering Delrium Orb,Situational,,,,,,
    Fields,The Harvester,11,The Harvest,Situational,,,,,,
    Fields,More Is Never Enough,7,Gilded Scarab,Situational,,,,,,
    Flooded Mine,Buried Treasure,3,Sulphite Scarab,Situational,,,,,,
    Flooded Mine,Death,4,Mon'tregul's Grasp,Situational,https://www.poewiki.net/wiki/Mon%27tregul%27s_Grasp,,,,,
    Flooded Mine,Gift of the Gemling Queen,9,L20 Support Gem,Situational,,,,,,
    Flooded Mine,Glimmer of Hope,8,Gold Ring,Situational,,,,,,
    Flooded Mine,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Flooded Mine,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Flooded Mine,The Endurance,4,Vivid Crimson Jewel,ActualGarbage,,,,,,
    Flooded Mine,The Fathomless Depths,8,Lightpoacher,Situational,https://www.poewiki.net/wiki/Lightpoacher,,,,,
    Flooded Mine,The Gambler,5,Divination Card,Meh,,,,,,
    Flooded Mine,The Primordial,5,Jewel (Primordial unique),Situational,,,,,,
    Flooded Mine,The Rite of Elements,5,L21 Golem Gem (corrupted),Situational,,,,,,
    Flooded Mine,The Survivalist,3,7x Orb of Alchemy,Situational,,,,,,
    Flooded Mine,The Wolf,5,Rigwald Item,Situational,,,,,,
    Flooded Mine,Time-Lost Relic,10,League-Specific Item,Situational,,,,,,
    Flooded Mine,Treasure Hunter,7,Vaults of Atziri (corrupted),Situational,https://www.poewiki.net/wiki/Vaults_of_Atziri,,,,,
    Flooded Mine,Volatile Power,9,Vaal Gem 20%Qual (Corrupted),Meh,,,,,,
    Flooded Mine,A Stone Perfected,5,Jewel Primordial 1-2 Implicit (corrupted),Situational,,,,,,
    Flooded Mine,Bijoux,3,Cluster Jewel iLvl 82,Situational,,,,,,
    Forbidden Woods,Mawr Blaidd,16,Eyes of the Great Wolf,Situational,https://www.poewiki.net/wiki/Eyes_of_the_Greatwolf,,,,,
    Forbidden Woods,Mitts,5,Gloves,Situational,,,,,,
    Forbidden Woods,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Forbidden Woods,The Gambler,5,Divination Card,Meh,,,,,,
    Forbidden Woods,Three Voices,3,3x Essence,Situational,,,,,,
    Forbidden Woods,The Scout,8,7x Exalted Orb,UsefulAF,,,,,,
    Forbidden Woods,The Pack Leader,6,Alpha's Howl,Situational,https://www.poewiki.net/wiki/Alpha%27s_Howl,,,,,
    Forbidden Woods,The Dragon,4,Coruscating Elixer,Situational,https://www.poewiki.net/wiki/Coruscating_Elixir,,,,,
    Forbidden Woods,The Demoness,5,Death's Hand,Situational,,,,,,
    Forbidden Woods,The Flora's Gift,5,5L Staff iLvl66,Situational,,,,,,
    Forbidden Woods,Call to the First Ones,5,Tier 1 Talisman (corrupted),Situational,,,,,,
    Forking River,,,,,,,,,,
    Foundry,The Thaumaturgist,8,Shavronne's Revelation (corrupted),Situational,https://www.poewiki.net/wiki/Shavronne%27s_Revelation,,,,,
    Foundry,Further Invention,4,Helmet Double-Influenced Item iLVL 100,Situational,,,,,,
    Foundry,The Carrion Crow,4,Life Armour,ActualGarbage,,,,,,
    Foundry,The Professor,4,Putric Cloister,Situational,https://www.poewiki.net/wiki/The_Putrid_Cloister,,,,,
    Frozen Cabin,Humility,9,Tablua Rasa,Situational,,,,,,
    Frozen Cabin,Mitts,5,Gloves,Situational,,,,,,
    Fungal Hollow,The Betrayal,9,Maligaro's Virtuosity,Situational,https://www.poewiki.net/wiki/Maligaro%27s_Virtuosity,,,,,
    Fungal Hollow,Treasure Hunter,7,Vaults of Atziri (corrupted),Situational,https://www.poewiki.net/wiki/Vaults_of_Atziri,,,,,
    Fungal Hollow,The Destination,9,Watcher's EYe Two-Implicit (corrupted),Situational,,,,,,
    Fungal Hollow,Hunter's Reward,3,The Taming,Situational,https://www.poewiki.net/wiki/The_Taming,,,,,
    Gardens,,,,,,,,,,
    Geode,Gift of the Gemling Queen,9,L20 Support Gem,Situational,,,,,,
    Geode,The Endurance,4,Vivid Crimson Jewel,ActualGarbage,,,,,,
    Geode,The Rite of Elements,5,L21 Golem Gem (corrupted),Situational,,,,,,
    Geode,The Watcher,12,Crown of Eyes,Situational,https://www.poewiki.net/wiki/Crown_of_Eyes,,,,,
    Geode,Volatile Power,9,Vaal Gem 20%Qual (Corrupted),Meh,,,,,,
    Geode,A Stone Perfected,5,Jewel Primordial 1-2 Implicit (corrupted),Situational,,,,,,
    Geode,The Primordial,5,Jewel (Primordial unique),Situational,,,,,,
    Geode,Buried Treasure,3,Sulphite Scarab,Situational,,,,,,
    Geode,Time-Lost Relic,10,League-Specific Item,Situational,,,,,,
    Geode,Bijoux,3,Cluster Jewel iLvl 83,Situational,,,,,,
    Geode,The Wolf,5,Rigwald Item,Situational,,,,,,
    Ghetto,,,,,,,,,,
    Glacier,,,,,,,,,,
    Grave Trough,,,,,,,,,,
    Graveyard,,,,,,,,,,
    Grotto,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Grotto,Hunter's Reward,3,The Taming,Situational,https://www.poewiki.net/wiki/The_Taming,,,,,
    Grotto,Loyalty,5,3x Orb of Fusing,Situational,,,,,,
    Grotto,Pride of the First Ones,7,Farrul's Fur,Situational,https://www.poewiki.net/wiki/Farrul%27s_Fur,,,,,
    Grotto,The Primordial,5,Jewel (Primordial unique),Situational,,,,,,
    Grotto,The Rite of Elements,5,L21 Golem Gem (corrupted),Situational,,,,,,
    Grotto,The Watcher,12,Crown of Eyes,Situational,https://www.poewiki.net/wiki/Crown_of_Eyes,,,,,
    Grotto,Treasure Hunter,7,Vaults of Atziri (corrupted),Situational,https://www.poewiki.net/wiki/Vaults_of_Atziri,,,,,
    Grotto,A Stone Perfected,5,Jewel Primordial 1-2 Implicit (corrupted),Situational,,,,,,
    Grotto,A Sea of Blue,3,13x Orb of Alteration,Situational,,,,,,
    Grotto,The Jeweller's Boon,5,5L Body Armour Influenced Item,Situational,,,,,,
    Grotto,Bijoux,3,Cluster Jewel iLvl 84,Situational,,,,,,
    Grotto,Buried Treasure,3,Sulphite Scarab,Situational,,,,,,
    Grotto,Gift of the gemling Queen,9,L20 Support Gem,Situational,,,,,,
    Grotto,The Endurance,4,Vivid Crimson Jewel,ActualGarbage,,,,,,
    Grotto,The Wolf,5,Rigwald Item,Situational,,,,,,
    Grotto,Time-Lost Relic,10,League-Specific Item,Situational,,,,,,
    Grotto,Volatile Power,9,Vaal Gem 20%Qual (Corrupted),Meh,,,,,,
    Grotto,The Shepherd's Sandals,3,Boots iLVL 100 Two-Implicit (corrupted),Situational,,,,,,
    Haunted Mansion,,,,,,,,,,
    Infested Valley,Struck by Lightning,3,Electrocuting Jewelry iLvl 76,ActualGarbage,,,,,,
    Infested Valley,The Long Watch,3,The Vigil,Situational,https://www.poewiki.net/wiki/The_Vigil,,,,,
    Infested Valley,Ambitious Obsession,4,Skittering Delrium Orb,Situational,,,,,,
    Infested Valley,The Side Quest,5,20x Scouting Report,UsefulAF,,,,,,
    Infested Valley,More is Never Enough,7,Gilded Scarab,Situational,,,,,,
    Ivory Temple,,,,,,,,,,
    Iceberg,,,,,,,,,,
    Jungle Valley,The Wind,7,Windripper,Situational,https://www.poewiki.net/wiki/Windripper,,,,,
    Jungle Valley,The Pack Leader,6,Alpha's Howl,Situational,https://www.poewiki.net/wiki/Alpha%27s_Howl,,,,,
    Jungle Valley,The Web,8,Weapon of Crafting,Situational,,,,,,
    Jungle Valley,The Scout,8,7x Exalted Orb,UsefulAF,,,,,,
    Jungle Valley,The Flora's Gift,5,5L Staff iLvl66,Situational,,,,,,
    Laboratory,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Laboratory,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Laboratory,The Gambler,5,Divination Card,Meh,,,,,,
    Laboratory,The Opulent,5,Ring iLvl 100,Meh,,,,,,
    Laboratory,The Professor,4,Putric Cloister,Situational,https://www.poewiki.net/wiki/The_Putrid_Cloister,,,,,
    Laboratory,The Lord of Celebration,4,Sceptre of Celebration Shaper Item,Situational,,,,,,
    Laboratory,The Thaumaturgist,8,Shavronne's Revelation (corrupted),Situational,https://www.poewiki.net/wiki/Shavronne%27s_Revelation,,,,,
    Laboratory,Further Invention,4,Helmet Double-Influenced Item iLVL 100,Situational,,,,,,
    Laboratory,The Carrion Crow,4,Life Armour,ActualGarbage,,,,,,
    Lair,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Lair,Loyalty,5,3x Orb of Fusing,Situational,,,,,,
    Lair,Pride of the FIrst Ones,7,Farrul's Fur,Situational,https://www.poewiki.net/wiki/Farrul%27s_Fur,,,,,
    Lair,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Lair,The Gambler,5,Divination Card,Meh,,,,,,
    Lair,The Master,4,Bisco's Collar,Situational,https://www.poewiki.net/wiki/Bisco%27s_Collar,,,,,
    Lair,The Trial,7,Map T15 (corrupted),Situational,,,,,,
    Lair,The Wolf's Shadow,3,Hyaon's Fury,Situational,https://www.poewiki.net/wiki/Hyaon%27s_Fury,,,,,
    Lair,The Wolven King's Bite,8,Rigwald's Quills,Situational,https://www.poewiki.net/wiki/Rigwald%27s_Quills,,,,,
    Lair,The Pack Leader,6,Alpha's Howl,Situational,https://www.poewiki.net/wiki/Alpha%27s_Howl,,,,,
    Lair,Treasure Hunter,7,Vaults of Atziri (corrupted),Situational,https://www.poewiki.net/wiki/Vaults_of_Atziri,,,,,
    Lair,The Flora's Gift,5,5L Staff iLvl66,Situational,,,,,,
    Lair,Hunter's Reward,3,The Taming,Situational,https://www.poewiki.net/wiki/The_Taming,,,,,
    Lair,The Scout,8,7x Exalted Orb,UsefulAF,,,,,,
    Lair,The Shepherd's Sandals,3,Boots iLVL 100 Two-Implicit (corrupted),Situational,,,,,,
    Lava Lake,,,,,,,,,,
    Leyline,Struck By Lightning,3,Electrocuting Jewellery iLvl76,ActualGarbage,,,,,,
    Leyline,The Coming Storm,8,Lightning Coil,Situational,https://www.poewiki.net/wiki/Lightning_Coil,,,,,
    Leyline,The Carrion Crow,4,Life Armour,ActualGarbage,,,,,,
    Lighthouse,The Wind,7,Windripper,Situational,https://www.poewiki.net/wiki/Windripper,,,,,
    Lighthouse,Prosperity,10,Perandus' Gold Ring,ActualGarbage,,,,,,
    Lighthouse,Lantador's Lost Love,7,Two-Stone Ring,Situational,,,,,,
    Lighthouse,The Catch,18,Fishing Rod Incubated iLvl100,GodTier,https://www.poewiki.net/wiki/Fishing_Rod,,,,,
    Lighthouse,The Old Man,12,Fishing Rod Two-Implicit (corrupted),GodTier,https://www.poewiki.net/wiki/Fishing_Rod,,,,,
    Lighthouse,The Journey,3,Harbinger's Orb,Situational,,,,,,
    Lookout,,,,,,,,,,
    Malformation,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Malformation,The Gambler,5,Divination Card,Meh,,,,,,
    Malformation,The Hunger,9,Taste of Hate,Situational,https://www.poewiki.net/wiki/Taste_of_Hate,,,,,
    Malformation,The Oath,6,Death's Oath,Situational,https://www.poewiki.net/wiki/Death%27s_Oath,,,,,
    Malformation,The Surveyor,4,Map (T14),ActualGarbage,,,,,,
    Malformation,Vile Power,5,Doomfletch,Situational,https://www.poewiki.net/wiki/Doomfletch,,,,,
    Malformation,The Insatiable,3,The Harvest (corrupted),Situational,https://www.poewiki.net/wiki/The_Harvest,,,,,
    Malformation,The Beast,6,Belly of the Beast,Situational,https://www.poewiki.net/wiki/Belly_of_the_Beast,,,,,
    Malformation,Vinia's Token,5,10x Orb of Regret,UsefulAF,,,,,,
    Marshes,Death,4,Mon'tregul's Grasp,Situational,https://www.poewiki.net/wiki/Mon%27tregul%27s_Grasp,,,,,
    Marshes,The Inoculated,4,Seraphim's Armor,Situational,,,,,,
    Mausoleum,,,,,,,,,,
    Maze,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Maze,The Admirer,9,Atziri's Item,Situational,"https://www.poewiki.net/wiki/Atziri,_Queen_of_the_Vaal",,,,,
    Maze,The Catalyst,3,1x Vaal Orb,Situational,,,,,,
    Maze,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Maze,The Gambler,5,Divination Card,Meh,,,,,,
    Maze,The Inventor,6,10x Vaal Orb,Situational,,,,,,
    Maze,Unrequited Love,16,19x Mirror Shard,Situational,,,,,,
    Maze,The Damned,6,Soul Ripper,Situational,https://www.poewiki.net/wiki/Soul_Ripper,,,,,
    Maze,The Hive of Knowledge,6,Machina Mitts Two-Implicit (corrupted),Situational,https://www.poewiki.net/wiki/Machina_Mitts,,,,,
    Mesa,,,,,,,,,,
    Mineral Pools,A Sea of Blue,3,13x Orb of Alteration,Situational,,,,,,
    Moon Temple,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Moon Temple,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Moon Temple,The Gambler,5,Divination Card,Meh,,,,,,
    Moon Temple,The Trial,7,Map T15 (corrupted),Situational,,,,,,
    Moon Temple,The Twilight Moon,6,The Twilight Temple,Situational,https://www.poewiki.net/wiki/The_Twilight_Temple,,,,,
    Moon Temple,The Carrion Crow,4,Life Armour,ActualGarbage,,,,,,
    Moon Temple,The Enlightened,6,L3 Enlighten,Situational,,,,,,
    Moon Temple,The Lunaris Priestess,5,Sire of Shards,Situational,https://www.poewiki.net/wiki/Sire_of_Shards,,,,,
    Museum,A Dab of Ink,9,Poet's Pen,Situational,https://www.poewiki.net/wiki/The_Poet%27s_Pen,,,,,
    Museum,Blind Venture,7,Ring (corrupted),Situational,,,,,,
    Museum,Destined to Crumble,5,Body Armour iLvl 100,Situational,,,,,,
    Museum,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Museum,Shard of Fate,4,Vivid Jewel,ActualGarbage,,,,,,
    Museum,The Academic,8,Inspired Learning,Situational,https://www.poewiki.net/wiki/Inspired_Learning,,,,,
    Museum,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Museum,The Gambler,5,Divination Card,Meh,,,,,,
    Museum,The Polymath,3,Astramentis,Situational,https://www.poewiki.net/wiki/Astramentis,,,,,
    Museum,The Scholar,3,40x Scroll of Wisdom,Situational,,,,,,
    Museum,The Trial,7,Map T15 (corrupted),Situational,,,,,,
    Museum,Thirst for Knowledge,5,Gluttony,Situational,https://www.poewiki.net/wiki/Gluttony,,,,,
    Museum,The Professor,4,Putric Cloister,Situational,https://www.poewiki.net/wiki/The_Putrid_Cloister,,,,,
    Museum,Costly Curio,6,Item Double-Influenced Item,Situational,,,,,,
    Museum,Echoes of Love,3,Fidelitas' Spike Two-Implicit Corrupted,Situational,https://www.poewiki.net/wiki/Fidelitas%27_Spike,,,,,
    Museum,Turn the Other Cheek,3,Pacifism (corrupted),Situational,,,,,,
    Museum,Checkmate,8,78x Simulacrum Splinter,Meh,,,,,,
    Museum,The Soul,9,Soul Taker,Situational,https://www.poewiki.net/wiki/Soul_Taker,,,,,
    Mineral Pools,The Hoarder,12,Exalted Orb,Situational,,,,,,
    Mineral Pools,Glimmer of Hope,8,Gold Ring,Situational,,,,,,
    Mineral Pools,The Fathomless Depths,8,Lightpoacher,Situational,https://www.poewiki.net/wiki/Lightpoacher,,,,,
    Mineral Pools,The Survivalist,3,7x Orb of Alchemy,Situational,,,,,,
    Mineral Pools,The Long Watch,3,The Vigil,Situational,https://www.poewiki.net/wiki/The_Vigil,,,,,
    Mineral Pools,The Cache,6,Jewellery,Situational,,,,,,
    Mineral Pools,The Jeweller's Boon,5,5L Body Armour Influenced Item,Situational,,,,,,
    Mineral Pools,The Avenger,12,Mjolner (corrupted),Situational,,,,,,
    Mineral Pools,The Side Quest,5,20x Scouting Report,UsefulAF,,,,,,
    Necropolis,Grave Knowledge,6,Summon Raging Spirit 20% Qual,Situational,,,,,,
    Necropolis,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Necropolis,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Necropolis,The Forsaken,7,Umbilicus Immortalis,Situational,https://www.poewiki.net/wiki/Umbilicus_Immortalis,,,,,
    Necropolis,The Gambler,5,Divination Card,Meh,,,,,,
    Necropolis,The Wretched,6,Belt,Situational,,,,,,
    Orchard,Boon of Justice,6,Offering to the Godess,Situational,,,,,,
    Orchard,Emperor's Luck,5,5x Currency,Meh,,,,,,
    Orchard,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Orchard,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Orchard,The Gambler,5,Divination Card,Meh,,,,,,
    Orchard,The Porcupine,6,6L Short Bow iLvl 50,UsefulAf,,,,,,
    Orchard,The Trial,7,Map T15 (corrupted),Situational,,,,,,
    Orchard,Rain Tempter,9,Map T5,ActualGarbage,,,,,,
    Orchard,The Road to Power,7,Runic One-Hand Weapon iLvl 100,Meh,,,,,,
    Orchard,Peaceful Moments,5,Timeless Jewel,Situational,https://www.poewiki.net/wiki/Timeless_Jewel,,,,,
    Orchard,The Easy Stroll,2,Map T15 8 Mods (corrupted),Situational,,,,,,
    Orchard,The Fox in the Brambles,7,Bramblejack Two-Implicit (corrupted),Situational,https://www.poewiki.net/wiki/Bramblejack,,,,,
    Orchard,Brotherhood in Exile,5,One With Nothing (corrupted),Situational,https://www.poewiki.net/wiki/One_With_Nothing,,,,,
    Orchard,A Mother's Parting Gift,6,Fertile Mind (corrupted),Situational,https://www.poewiki.net/wiki/Fertile_Mind,,,,,
    Overgrown Ruin,Echoes of Love,3,Fidelitas' Spike Two-Implicit Corrupted,Situational,https://www.poewiki.net/wiki/Fidelitas%27_Spike,,,,,
    Overgrown Ruin,Emperor of Purity,7,6L Holy Chainmail iLvl 59,Situational,,,,,,
    Overgrown Ruin,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Overgrown Ruin,Shard of Fate,4,Vivid Jewel,ActualGarbage,,,,,,
    Overgrown Ruin,The Dark Mage,6,6L Staff iLvl 55,Situational,,,,,,
    Overgrown Ruin,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Overgrown Ruin,The Gambler,5,Divination Card,Meh,,,,,,
    Overgrown Ruin,The Garish Power,4,Jewel,Situational,,,,,,
    Overgrown Ruin,The Surgeon,4,Surgeon's Flask,Situational,,,,,,
    Overgrown Ruin,The Trial,7,Map T15 (corrupted),Situational,,,,,,
    Overgrown Ruin,The Artist,11,L4 Enhance (corrupted),Situational,,,,,,
    Overgrown Ruin,The Sigil,3,Unassailable Amulet,Situational,,,,,,
    Overgrown Ruin,The Wedding Gift,2,Arakaali's Fang,Situational,https://www.poewiki.net/wiki/Arakaali%27s_Fang,,,,,
    Overgrown Shrine,Echoes of Love,3,Fidelitas' Spike Two-Implicit Corrupted,Situational,https://www.poewiki.net/wiki/Fidelitas%27_Spike,,,,,
    Overgrown Shrine,Emperor of Purity,7,6L Holy Chainmail iLvl 60,Situational,,,,,,
    Overgrown Shrine,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Overgrown Shrine,Shard of Fate,4,Vivid Jewel,ActualGarbage,,,,,,
    Overgrown Shrine,The Dark Mage,6,6L Staff iLvl 56,Situational,,,,,,
    Overgrown Shrine,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Overgrown Shrine,The Gambler,5,Divination Card,Meh,,,,,,
    Overgrown Shrine,The Garish Power,4,Jewel,Situational,,,,,,
    Overgrown Shrine,The Sigil,3,Unassailable Amulet,Situational,,,,,,
    Overgrown Shrine,The Soul,9,Soul Taker,Situational,https://www.poewiki.net/wiki/Soul_Taker,,,,,
    Overgrown Shrine,The Surgeon,4,Surgeon's Flask,Situational,,,,,,
    Overgrown Shrine,Harmony of Souls,9,9x Shrieking Essence,Situational,,,,,,
    Overgrown Shrine,The Artist,11,L4 Enhance (corrupted),Situational,,,,,,
    Peninsula,,,,,,,,,,
    Phantasmagoria,Deodre's Madness,9,Deodre Item (Boss Drop),Situational,,,,,,
    Phantasmagoria,The Hunger,9,Taste of Hate,Situational,https://www.poewiki.net/wiki/Taste_of_Hate,,,,,
    Phantasmagoria,The Oath,6,Death's Oath,Situational,https://www.poewiki.net/wiki/Death%27s_Oath,,,,,
    Phantasmagoria,The Surveyor,4,Map (T14),ActualGarbage,,,,,,
    Phantasmagoria,The Soul,9,Soul Taker,Situational,https://www.poewiki.net/wiki/Soul_Taker,,,,,
    Phantasmagoria,Vile Power,5,Doomfletch,Situational,https://www.poewiki.net/wiki/Doomfletch,,,,,
    Phantasmagoria,The Insatiable,3,The Harvest (corrupted),Situational,https://www.poewiki.net/wiki/The_Harvest,,,,,
    Phantasmagoria,The Brawny Battle Mage,5,Merciless Tornado Wand iLVL 100,Situational,,,,,,
    Phantasmagoria,The Doctor,8,Headhunter,GodTier,https://www.poewiki.net/wiki/Headhunter,,,,,
    Phantasmagoria,The Incantation,4,Whispering Ice,Situational,https://www.poewiki.net/wiki/The_Whispering_Ice,,,,,
    Phantasmagoria,The Witch,8,Kiara's Determination,Situational,https://www.poewiki.net/wiki/Kiara%27s_Determination,,,,,
    Phantasmagoria,The Beast,6,Belly of the Beast,Situational,https://www.poewiki.net/wiki/Belly_of_the_Beast,,,,,
    Pier,Lucky Connections,7,20x Orb of Fusings,Situational,,,,,,
    Pier,The Pact,9,Pledge of Hands,Situational,https://www.poewiki.net/wiki/Pledge_of_Hands,,,,,
    Pier,Prosperity,10,Perandus' Gold Ring,ActualGarbage,,,,,,
    Pier,Lantador's Lost Love,7,Two-Stone Ring,Situational,,,,,,
    Pier,The Carrion Crow,4,Life Armour,ActualGarbage,,,,,,
    Pier,The Catch,18,Fishing Rod Incubated iLvl100,GodTier,https://www.poewiki.net/wiki/Fishing_Rod,,,,,
    Pier,The Old Man,12,Fishing Rod Two-Implicit (corrupted),GodTier,https://www.poewiki.net/wiki/Fishing_Rod,,,,,
    Pier,The Drunken Aristocrat,8,Divination DIstillate,Situational,https://www.poewiki.net/wiki/Divination_Distillate,,,,,
    Pier,The Journey,3,Harbinger's Orb,Situational,,,,,,
    Pit,The Gladiator,5,Nightmare Bascinet,Situational,,,,,,
    Pit,The Carrion Crow,4,Life Armour,ActualGarbage,,,,,,
    Pit,Unchained,4,Facebreaker Two-Implicit Corrupted,Situational,,,,,,
    Pit,The King's Blade,5,Bloodthirsty Eternal Sword iLVL 66,ActualGarbage,,,,,,
    Pit,The Last One Standing,10,Atziri's Disfavour (Boss Drop),Situational,https://www.poewiki.net/wiki/Atziri%27s_Disfavour,,,,,
    Pit,The Sword King's Salute,7,Daresso's Salute,Situational,https://www.poewiki.net/wiki/Daresso%27s_Salute,,,,,
    Plateau,The Spark and the Flame,2,Berek's Respite,Situational,https://www.poewiki.net/wiki/Berek%27s_Respite,,,,,
    Plateau,The Wind,7,Windripper,Situational,https://www.poewiki.net/wiki/Windripper,,,,,
    Plateau,Prosperity,10,Perandus' Gold Ring,ActualGarbage,,,,,,
    Plateau,Lantador's Lost Love,7,Two-Stone Ring,Situational,,,,,,
    Plateau,The Catch,18,Fishing Rod Incubated iLvl100,GodTier,https://www.poewiki.net/wiki/Fishing_Rod,,,,,
    Plateau,The Old Man,12,Fishing Rod Two-Implicit (corrupted),GodTier,https://www.poewiki.net/wiki/Fishing_Rod,,,,,
    Plateau,The Journey,3,Harbinger's Orb,Situational,,,,,,
    Plaza,Boon of Justice,6,Offering to the Godess,Situational,,,,,,
    Plaza,Brotherhood in Exile,5,One With Nothing (corrupted),Situational,https://www.poewiki.net/wiki/One_With_Nothing,,,,,
    Plaza,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Plaza,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Plaza,The Gambler,5,Divination Card,Meh,,,,,,
    Port,Assassin's Favour,9,Dagger,Situational,https://www.poewiki.net/wiki/List_of_unique_daggers,,,,,
    Port,Dying Anguish,8,L19 Gem Alt Qual 19%,Situational,,,,,,
    Port,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Port,Jack in the Box,4,Item,Situational,,,,,,
    Port,Lantador's Lost Love,7,Two-Stone Ring,Situational,,,,,,
    Port,Lucky Connections,7,20x Orb of Fusing,Situational,,,,,,
    Port,Prosperity,10,Perandus' Gold Ring,ActualGarbage,,,,,,
    Port,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Port,The Gambler,5,Divination Card,Meh,,,,,,
    Port,The Pact,9,Pledge of Hands,Situational,https://www.poewiki.net/wiki/Pledge_of_Hands,,,,,
    Port,The Saint's Treasure,10,2x Exalted Orb,UsefulAF,,,,,,
    Port,The Poet,9,Blood of Corruption (corrupted),Situational,https://www.poewiki.net/wiki/Blood_of_Corruption,,,,,
    Port,The Catch,18,Fishing Rod Incubated iLvl100,GodTier,https://www.poewiki.net/wiki/Fishing_Rod,,,,,
    Port,The Tyrant,9,Merciless Weapon iLevel 100,Situational,,,,,,
    Port,The Carrion Crow,4,Life Armour,ActualGarbage,,,,,,
    Port,The Journey,3,Harbinger's Orb,Situational,,,,,,
    Precinct,The Gentleman,4,Sword (corrupted),Situational,,,,,,
    Precinct,Dying Anguish,8,L19 Gem Alt Qual 19%,Situational,,,,,,
    Precinct,Jack in the Box,4,Item,Situational,,,,,,
    Precinct,The Carrion Crow,4,Life Armour,ActualGarbage,,,,,,
    Precinct,The Saint's Treasure,10,2x Exalted Orb,UsefulAF,,,,,,
    Precinct,The Undaunted,5,Nemesis Item (corrupted),Situational,,,,,,
    Precinct,The Tyrant,9,Merciless Weapon iLevel 100,Situational,,,,,,
    Primordial Blocks,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Primordial Blocks,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Primordial Blocks,The Gambler,5,Divination Card,Meh,,,,,,
    Primordial Blocks,The Long Watch,3,The Vigil,Situational,https://www.poewiki.net/wiki/The_Vigil,,,,,
    Primordial Blocks,A Sea of Blue,3,13x Orb of Alteration,Situational,,,,,,
    Primordial Blocks,The Jeweller's Boon,5,5L Body Armour Influenced Item,Situational,,,,,,
    Primordial Blocks,The Side Quest,5,20x Scouting Report,UsefulAF,,,,,,
    Primordial Pool,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Primordial Pool,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Primordial Pool,The Gambler,5,Divination Card,Meh,,,,,,
    Primordial Pool,The Inoculated,4,Seraphim's Armor,Situational,,,,,,
    Primordial Pool,The Trial,7,Map T15 (corrupted),Situational,,,,,,
    Primordial Pool,The Prince of Darkness,6,Elegant Hubris (boss drop),Situational,,,,,,
    Primordial Pool,A Modest Request,3,Megalomaniac (corrupted) (boss drop),Situational,,,,,,
    Promenade,Dying Anguish,8,L19 Gem Alt Qual 19%,Situational,,,,,,
    Promenade,Gemcutter's Promise,3,Gem 20% Qual,Situational,,,,,,
    Promenade,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Promenade,Jack in the Box,4,Item,Situational,,,,,,
    Promenade,Struck by Lightning,3,Electrocuting Jewelry iLvl 76,ActualGarbage,,,,,,
    Promenade,The Carrion Crow,4,Life Armour,ActualGarbage,,,,,,
    Promenade,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Promenade,The Gambler,5,Divination Card,Meh,,,,,,
    Promenade,The Patient,8,The Nurse,Situational,,,,,,
    Promenade,The Traitor,4,Wand (corrupted),Situational,,,,,,
    Promenade,The Trial,7,Map T15 (corrupted),Situational,,,,,,
    Promenade,The Warlord,6,6L Coronal Maul iLvl 85,Situational,,,,,,
    Promenade,Merciless Armament,4,Merciless Two-Hand Weapon iLVL 100,ActualGarbage,,,,,,
    Racecourse,Three Voices,3,3x Essence,Situational,,,,,,
    Racecourse,The Carrion Crow,4,Life Armour,ActualGarbage,,,,,,
    Racecourse,The Deceiver,4,Belt of the Deceiver (corrupted),Situational,https://www.poewiki.net/wiki/Belt_of_the_Deceiver,,,,,
    Racecourse,The Visionary,6,Lioneye's Vision,Situational,https://www.poewiki.net/wiki/Lioneye%27s_Vision,,,,,
    Ramparts,Hunter's Resolve,8,Bow,Situational,,,,,,
    Ramparts,The Carrion Crow,4,Life Armour,ActualGarbage,,,,,,
    Ramparts,The Pack Leader,6,Alpha's Howl,Situational,https://www.poewiki.net/wiki/Alpha%27s_Howl,,,,,
    Ramparts,The Traitor,4,Wand (corrupted),Situational,,,,,,
    Ramparts,The Scout,8,7x Exalted Orb,UsefulAF,,,,,,
    Ramparts,The Drunken Aristocrat,8,Divination DIstillate,Situational,https://www.poewiki.net/wiki/Divination_Distillate,,,,,
    Ramparts,Left to Fate,4,Map T16 UnIdentified (Corrupted),Meh,,,,,,
    Ramparts,The Flora's Gift,5,5L Staff iLvl66,Situational,,,,,,
    Reef,,,,,,,,,,
    Relic Chambers,Blind Venture,7,Ring (corrupted),Situational,,,,,,
    Relic Chambers,Might is Right,9,Trypanon,Situational,https://www.poewiki.net/wiki/Trypanon,,,,,
    Relic Chambers,No Traces,9,30x Orb of Scouring,UsefulAF,,,,,,
    Relic Chambers,The Carrion Crow,4,Life Armour,ActualGarbage,,,,,,
    Relic Chambers,The Opulent,5,Ring iLvl 100,Meh,,,,,,
    Relic Chambers,The Polymath,3,Astramentis,Situational,https://www.poewiki.net/wiki/Astramentis,,,,,
    Relic Chambers,Costly Curio,6,Item Double-Influenced Item,Situational,,,,,,
    Relic Chambers,The Lord of Celebration,4,Sceptre of Celebration Shaper Item,Situational,,,,,,
    Residence,Home,3,Exceptional Gem 1-20% Qual,UsefulAF,https://www.poewiki.net/wiki/Support_gem#Exceptional_Support_Gems,,,,,
    Residence,Light and Truth,2,Crystal Sceptre,Situational,,,,,,
    Residence,The Opulent,5,Ring iLvl 100,Meh,,,,,,
    Residence,The Tower,6,Staff,Meh,,,,,,
    Residence,The Dapper Prodigy,6,6L Body Armour iLVL100,Situational,,,,,,
    Residence,The Drunken Aristocrat,8,Divination DIstillate,Situational,https://www.poewiki.net/wiki/Divination_Distillate,,,,,
    Residence,The Unexpected Prize,2,Attribute Transforming Jewel (corrupted),Situational,,,,,,
    Residence,The Lord of Celebration,4,Sceptre of Celebration Shaper Item,Situational,,,,,,
    Residence,The Conduit,9,Doriyani's Fist,Situational,https://www.poewiki.net/wiki/Doryani%27s_Fist,,,,,
    Residence,The Sephirot,11,10x Divine Orb,GodTier,,,,,,
    Scriptorium,The Scholar,3,40x Scroll of Wisdom,Situational,,,,,,
    Scriptorium,The Soul,9,Soul Taker,Situational,https://www.poewiki.net/wiki/Soul_Taker,,,,,
    Scriptorium,A Dab of Ink,9,Poet's Pen,Situational,https://www.poewiki.net/wiki/The_Poet%27s_Pen,,,,,
    Scriptorium,Destined to Crumble,,,,,,,,,
    Scriptorium,The Academic,8,Inspired Learning,Situational,https://www.poewiki.net/wiki/Inspired_Learning,,,,,
    Scriptorium,Thirst for Knowledge,5,Gluttony,Situational,https://www.poewiki.net/wiki/Gluttony,,,,,
    Scriptorium,The Professor,4,Putric Cloister,Situational,https://www.poewiki.net/wiki/The_Putrid_Cloister,,,,,
    Scriptorium,The Nurse,8,The Doctor,UsefulAF,https://www.poewiki.net/wiki/The_Doctor,,,,,
    Scriptorium,Turn the other Cheek,3,Pacifism (corrupted),Situational,,,,,,
    Scriptorium,Checkmate,8,78x Simulacrum Splinter,Meh,,,,,,
    Sepulcher,,,,,,,,,,
    Shore,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Shore,Prosperity,10,Perandus' Gold Ring,ActualGarbage,,,,,,
    Shore,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Shore,The Gambler,5,Divination Card,Meh,,,,,,
    Shore,The Landing,5,The Beachead T15 Map (corrupted),Situational,https://www.poewiki.net/wiki/The_Beachhead,,,,,
    Shore,The Trial,7,Map T15 (corrupted),Situational,,,,,,
    Shore,Lantador's Lost Love,7,Two-Stone Ring,Situational,,,,,,
    Shore,From Bone to Ashes,8,Ngamahu's Flame Two-Implicit (corrupted),Situational,https://www.poewiki.net/wiki/Ngamahu%27s_Flame,,,,,
    Shore,The Road to Power,7,Runic One-Hand Weapon iLvl 100,Meh,,,,,,
    Shore,The Destination,9,Watcher's EYe Two-Implicit (corrupted),Situational,,,,,,
    Shore,THe Catch,18,Fishing Rod Incubated iLvl100,GodTier,https://www.poewiki.net/wiki/Fishing_Rod,,,,,
    Shore,The Old Man,12,Fishing Rod Two-Implicit (corrupted),GodTier,https://www.poewiki.net/wiki/Fishing_Rod,,,,,
    Shore,The Journey,3,Harbinger's Orb,Situational,,,,,,
    Shrine,The Fiend,11,Headhunter (corrupted),Situational,https://www.poewiki.net/wiki/Headhunter,,,,,
    Shrine,The Thaumaturgist,8,Shavronne's Revelation (corrupted),Situational,https://www.poewiki.net/wiki/Shavronne%27s_Revelation,,,,,
    Shrine,Vinia's Token,5,10x Orb of Regret,UsefulAF,,,,,,
    Shrine,The Army of Blood,6,Bloodbond,Situational,https://www.poewiki.net/wiki/Bloodbond,,,,,
    Shrine,The Professor,4,Putric Cloister,Situational,https://www.poewiki.net/wiki/The_Putrid_Cloister,,,,,
    Shipyard,Prosperity,10,Perandus' Gold Ring,ActualGarbage,,,,,,
    Shipyard,Lantador's Lost Love,7,Two-Stone Ring,Situational,,,,,,
    Shipyard,Lucky Connections,7,20x Orb of Fusing,Situational,,,,,,
    Shipyard,Struck By Lightning,3,Electrocuting Jewelry iLvl 76,ActualGarbage,,,,,,
    Shipyard,The Carrion Crow,4,Life Armour,ActualGarbage,,,,,,
    Shipyard,The Pact,9,Pledge of Hands,Situational,https://www.poewiki.net/wiki/Pledge_of_Hands,,,,,
    Shipyard,The Catch,18,Fishing Rod Incubated iLvl100,GodTier,https://www.poewiki.net/wiki/Fishing_Rod,,,,,
    Shipyard,The Old Man,12,Fishing Rod Two-Implicit (corrupted),GodTier,https://www.poewiki.net/wiki/Fishing_Rod,,,,,
    Shipyard,The Journey,3,Harbinger's Orb,Situational,,,,,,
    Siege,Home,3,Exceptional Gem 1-20% Qual,UsefulAF,https://www.poewiki.net/wiki/Support_gem#Exceptional_Support_Gems,,,,,
    Siege,The Carrion Crow,4,Life Armour,ActualGarbage,,,,,,
    Siege,The Long Watch,,,,,,,,,
    Siege,The Spark and the Flame,2,Berek's Respite,Situational,https://www.poewiki.net/wiki/Berek%27s_Respite,,,,,
    Siege,Ambitious Obsession,4,Skittering Delrium Orb,Situational,,,,,,
    Siege,The Side Quest,5,20x Scouting Report,UsefulAF,,,,,,
    Siege,More is Never Enough,7,Gilded Scarab,Situational,,,,,,
    Silo,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Silo,The Gambler,5,Divination Card,Meh,,,,,,
    Silo,The Carrion Crow,4,Life Armour,ActualGarbage,,,,,,
    Silo,The Life Thief,6,Zerphi's Heart,Situational,https://www.poewiki.net/wiki/Zerphi%27s_Heart,,,,,
    Silo,The Standoff,3,Rustic Stash,Sirtuational,,,,,,
    Silo,The Blazing Fire,6,Chin Sol,Situational,https://www.poewiki.net/wiki/Chin_Sol,,,,,
    Silo,The Journalist,10,Helmet Double-Veiled Item,Meh,,,,,,
    Spider Forest,,,,,,,,,,
    Spider Lair,,,,,,,,,,
    Stagnation,Struck by Lightning,3,Electrocuting Jewelry iLvl 76,ActualGarbage,,,,,,
    Stagnation,The Pack Leader,6,Alpha's Howl,Situational,https://www.poewiki.net/wiki/Alpha%27s_Howl,,,,,
    Stagnation,The Inoculated,4,Seraphim's Armor,Situational,,,,,,
    Stagnation,The Scout,8,7x Exalted Orb,UsefulAF,,,,,,
    Stagnation,The Flora's Gift,5,5L Staff iLvl66,Situational,,,,,,
    Strand,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Strand,Lantador's Lost Love,7,Two-Stone Ring,Situational,,,,,,
    Strand,Prosperity,10,Perandus' Gold Ring,ActualGarbage,,,,,,
    Strand,The Betrayal,9,Maligaro's Virtuosity,Situational,https://www.poewiki.net/wiki/Maligaro%27s_Virtuosity,,,,,
    Strand,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Strand,The Gambler,5,Divination Card,Meh,,,,,,
    Strand,The Landing,5,The Beachead T15 Map (corrupted),Situational,https://www.poewiki.net/wiki/The_Beachhead,,,,,
    Strand,The Old Man,12,Fishing Rod Two-Implicit (corrupted),GodTier,https://www.poewiki.net/wiki/Fishing_Rod,,,,,
    Strand,The Stormcaller,4,Agnerod Staff,Situational,,,,,,
    Strand,Thunderous Skies,5,Storm Cloud,Situational,https://www.poewiki.net/wiki/Storm_Cloud,,,,,
    Strand,The Catch,18,Fishing Rod Incubated iLvl100,GodTier,https://www.poewiki.net/wiki/Fishing_Rod,,,,,
    Strand,From Bone to Ashes,8,Ngamahu's Flame Two-Implicit (corrupted),Situational,https://www.poewiki.net/wiki/Ngamahu%27s_Flame,,,,,
    Strand,Scholar of the Seas,7,Mao Kun,Situational,https://www.poewiki.net/wiki/Mao_Kun,,,,,
    Strand,The Deep Ones,5,Tidebreaker,Situational,https://www.poewiki.net/wiki/Tidebreaker,,,,,
    Strand,The Formless Sea,7,Varunastra,Situational,https://www.poewiki.net/wiki/Tidebreaker,,,,,
    Strand,The Mercenary,5,Shield (corrupted),Situational,https://www.poewiki.net/wiki/List_of_unique_shields,,,,,
    Strand,The Journey,3,Harbinger's Orb,Situational,,,,,,
    Sulpher Vents,The Inoculated,4,Seraphim's Armor,Situational,,,,,,
    Sunken City,,,,,,,,,,
    Temple,Boundless Realms,4,Map,Situational,,,,,,
    Temple,Dialla's Subjugation,7,Support Gem 23% Qual (corrupted),Situational,,,,,,
    Temple,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Temple,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Temple,The Enlightened,6,L3 Enlighten,Situational,,,,,,
    Temple,The Gambler,5,Divination Card,Meh,,,,,,
    Temple,The Opulent,5,Ring iLvl 100,Meh,,,,,,
    Temple,The Sun,7,Rise of the Phoenix,Situational,https://www.poewiki.net/wiki/Rise_of_the_Phoenix,,,,,
    Temple,The Carrion Crow,4,Life Armour,ActualGarbage,,,,,,
    Temple,The Lord of Celebration,4,Sceptre of Celebration Shaper Item,Situational,,,,,,
    Terrace,The Porcupine,6,6L Short Bow iLVL 50,UsefulAF,,,,,,
    Terrace,Emperor's Luck,5,5x Currency,Meh,,,,,,
    Terrace,Rain Tempter,9,Map T6,ActualGarbage,,,,,,
    Terrace,The Carrion Crow,4,Life Armour,ActualGarbage,,,,,,
    Terrace,Peaceful Moments,5,Timeless Jewel,Situational,https://www.poewiki.net/wiki/Timeless_Jewel,,,,,
    Terrace,The Easy Stroll,2,Map T15 8 Mods (corrupted),Situational,,,,,,
    Terrace,Ambitious Obsession,4,Skittering Delrium Orb,Situational,,,,,,
    Terrace,The Fox in the Brambles,7,Bramblejack Two-Implicit (corrupted),Situational,https://www.poewiki.net/wiki/Bramblejack,,,,,
    Terrace,A Mother's Parting Gift,6,Fertile Mind (corrupted),Situational,https://www.poewiki.net/wiki/Fertile_Mind,,,,,
    Terrace,More is Never Enough,7,Gilded Scarab,Situational,,,,,,
    Thicket,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Thicket,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Thicket,The Explorer,6,Map (corrupted),Situational,,,,,,
    Thicket,The Gambler,5,Divination Card,Meh,,,,,,
    Thicket,The Pack Leader,6,Alpha's Howl,Situational,https://www.poewiki.net/wiki/Alpha%27s_Howl,,,,,
    Thicket,The Scout,8,7x Exalted Orb,UsefulAF,,,,,,
    Thicket,The Flora's Gift,5,5L Staff iLvl66,Situational,,,,,,
    Thicket,Call to the First Ones,5,Tier 1 Talisman (corrupted),Situational,,,,,,
    Tower,Home,3,Exceptional Gem 1-20% Qual,UsefulAF,https://www.poewiki.net/wiki/Support_gem#Exceptional_Support_Gems,,,,,
    Tower,The Soul,9,Soul Taker,Situational,https://www.poewiki.net/wiki/Soul_Taker,,,,,
    Tower,Stuck by Lightning,3,Electrocuting Jewelry iLvl 76,ActualGarbage,,,,,,
    Tower,The Stormcaller,4,Agnerod Staff,Situational,,,,,,
    Tower,The Tower,6,Staff,Meh,,,,,,
    Tower,Thunderous Skies,5,Storm Cloud,Situational,https://www.poewiki.net/wiki/Storm_Cloud,,,,,
    Tower,The Nurse,8,The Doctor,UsefulAF,https://www.poewiki.net/wiki/The_Doctor,,,,,
    Toxic Sewers,The Feast,5,Romira's Banquet (corrupted),Situational,,,,,,
    Toxic Sewers,The Throne,2,Kaom's Roots (corrupted),Situational,,,,,,
    Toxic Sewers,The Web,8,Weapon of Crafting,Situational,,,,,,
    Toxic Sewers,Vile Power,5,Doomfletch,Situational,https://www.poewiki.net/wiki/Doomfletch,,,,,
    Tropical Island,Prosperity,10,Perandus' Gold Ring,ActualGarbage,,,,,,
    Tropical Island,Lantador's Lost Love,7,Two-Stone Ring,Situational,,,,,,
    Tropical Island,The Pack Leader,6,Alpha's Howl,Situational,https://www.poewiki.net/wiki/Alpha%27s_Howl,,,,,
    Tropical Island,The Scout,8,7x Exalted Orb,UsefulAF,,,,,,
    Tropical Island,The Destination,9,Watcher's EYe Two-Implicit (corrupted),Situational,,,,,,
    Tropical Island,The Catch,18,Fishing Rod Incubated iLvl100,GodTier,https://www.poewiki.net/wiki/Fishing_Rod,,,,,
    Tropical Island,The Old Man,12,Fishing Rod Two-Implicit (corrupted),GodTier,https://www.poewiki.net/wiki/Fishing_Rod,,,,,
    Tropical Island,The Journey,3,Harbinger's Orb,Situational,,,,,,
    Tropical Island,The Flora's Gift,5,5L Staff iLvl66,Situational,,,,,,
    Underground River,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Underground River,Hunter's Reward,3,The Taming,Situational,https://www.poewiki.net/wiki/The_Taming,,,,,
    Underground River,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Underground River,The Gambler,5,Divination Card,Meh,,,,,,
    Underground River,The Trial,7,Map T15 (corrupted),Situational,,,,,,
    Underground River,Treasure Hunter,7,Vaults of Atziri (corrupted),Situational,https://www.poewiki.net/wiki/Vaults_of_Atziri,,,,,
    Underground Sea,Glimmer of Hope,8,Gold Ring,Situational,,,,,,
    Underground Sea,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Underground Sea,Lysah's Respite,6,Agate Amulet (corrupted),Situational,,,,,,
    Underground Sea,The Cache,6,Jewellery,Situational,,,,,,
    Underground Sea,The Cacophony,8,3x Deafening Essence,Situational,,,,,,
    Underground Sea,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Underground Sea,The Gambler,5,Divination Card,Meh,,,,,,
    Underground Sea,The Hoarder,12,Exalted Orb,Situational,,,,,,
    Underground Sea,The Lover,2,Jewellery iLvl 79,Situational,,,,,,
    Underground Sea,The Siren,7,The Whispering Ice (corrupted),Situational,https://www.poewiki.net/wiki/The_Whispering_Ice,,,,,
    Underground Sea,The Survivalist,3,7x Orb of Alchemy,Situational,,,,,,
    Underground Sea,Treasure Hunter,7,Vaults of Atziri (corrupted),Situational,https://www.poewiki.net/wiki/Vaults_of_Atziri,,,,,
    Underground Sea,The Fathomless Depths,8,Lightpoacher,Situational,https://www.poewiki.net/wiki/Lightpoacher,,,,,
    Underground Sea,The Avenger,12,Mjolner (corrupted),Situational,,,,,,
    Underground Sea,Hunter's Reward,3,The Taming,Situational,https://www.poewiki.net/wiki/The_Taming,,,,,
    Vaal Pyramid,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Vaal Pyramid,The Admirer,9,Atziri's Item,Situational,"https://www.poewiki.net/wiki/Atziri,_Queen_of_the_Vaal",,,,,
    Vaal Pyramid,The Catalyst,3,1x Vaal Orb,Situational,,,,,,
    Vaal Pyramid,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Vaal Pyramid,The Gambler,5,Divination Card,Meh,,,,,,
    Vaal Pyramid,The Hive of Knowledge,6,Machina Mitts Two-Implicit (corrupted),Situational,https://www.poewiki.net/wiki/Machina_Mitts,,,,,
    Vaal Pyramid,The Inventor,6,10x Vaal Orb,Situational,,,,,,
    Vaal Pyramid,The Trial,7,Map T15 (corrupted),Situational,,,,,,
    Vaal Pyramid,Three Voices,3,3x Essence,Situational,,,,,,
    Vaal Pyramid,Unrequited Love,16,19x Mirror Shard,Situational,,,,,,
    Vaal Pyramid,The Catalyst,3,1x Vaal Orb,Situational,,,,,,
    Vaal Pyramid,The Damned,6,Soul Ripper,Situational,https://www.poewiki.net/wiki/Soul_Ripper,,,,,
    Vaal Pyramid,Arrogance of the Vaal,8,Item (Two-Implicit Corrupted),Situational,,,,,,
    Vaal Temple,The Admirer,9,Atziri's Item,Situational,"https://www.poewiki.net/wiki/Atziri,_Queen_of_the_Vaal",,,,,
    Vaal Temple,The Catalyst,3,1x Vaal Orb,Situational,,,,,,
    Vaal Temple,The Damned,6,Soul Ripper,Situational,https://www.poewiki.net/wiki/Soul_Ripper,,,,,
    Vaal Temple,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Vaal Temple,The Gambler,5,Divination Card,Meh,,,,,,
    Vaal Temple,The Hive of Knowledge,6,Machina Mitts Two-Implicit (corrupted),Situational,https://www.poewiki.net/wiki/Machina_Mitts,,,,,
    Vaal Temple,The Inventor,6,10x Vaal Orb,Situational,,,,,,
    Vaal Temple,Three Voices,3,3x Essence,Situational,,,,,,
    Vaal Temple,Unrequited Love,16,19x Mirror Shard,Situational,,,,,,
    Villa,,,,,,,,,,
    Volcano,The Battle Born,5,Axe,Situational,,,,,,
    Volcano,The King's Heart,8,Kaom's Heart,Situational,https://www.poewiki.net/wiki/Kaom%27s_Heart,,,,,
    Volcano,From Bone to Ashes,8,Ngamahu's Flame Two-Implicit (corrupted),Situational,https://www.poewiki.net/wiki/Ngamahu%27s_Flame,,,,,
    Waste Pool,The Soul,9,Soul Taker,Situational,https://www.poewiki.net/wiki/Soul_Taker,,,,,
    Waste Pool,The Feast,5,Romira's Banquet (corrupted),Situational,,,,,,
    Waste Pool,The Throne,2,Kaom's Roots (corrupted),Situational,,,,,,
    Waste Pool,The Brawny Battle Mage,5,Merciless Tornado Wand iLVL 101,Situational,,,,,,
    Waste Pool,The Doctor,8,Headhunter,GodTier,https://www.poewiki.net/wiki/Headhunter,,,,,
    Waste Pool,The Incantation,4,Whispering Ice,Situational,https://www.poewiki.net/wiki/The_Whispering_Ice,,,,,
    Waste Pool,The Witch,8,Kiara's Determination,Situational,https://www.poewiki.net/wiki/Kiara%27s_Determination,,,,,
    Waste Pool,Vile Power,5,Doomfletch,Situational,https://www.poewiki.net/wiki/Doomfletch,,,,,
    Wasteland,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Wasteland,The Brittle Emperor,8,Voll's Devotion (corrupted),Situational,https://www.poewiki.net/wiki/Voll%27s_Devotion,,,,,
    Wasteland,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Wasteland,The Gambler,5,Divination Card,Meh,,,,,,
    Wasteland,The Tinkerer's Table,5,5x Fossil,Situational,,,,,,
    Wasteland,The Trial,7,Map T15 (corrupted),Situational,,,,,,
    Wharf,Prosperity,10,Perandus' Gold Ring,ActualGarbage,,,,,,
    Wharf,Lantador's Lost Love,7,Two-Stone Ring,Situational,,,,,,
    Wharf,Lucky Connections,7,20x Orb of Fusing,Situational,,,,,,
    Wharf,Struck by Lightning,3,Electrocuting Jewelry iLvl 76,ActualGarbage,,,,,,
    Wharf,The Coming Storm,8,Lightning Coil,Situational,https://www.poewiki.net/wiki/Lightning_Coil,,,,,
    Wharf,The Carrion Crow,4,Life Armour,ActualGarbage,,,,,,
    Wharf,The Pact,9,Pledge of Hands,Situational,https://www.poewiki.net/wiki/Pledge_of_Hands,,,,,
    Wharf,The Rite of Elements,5,L21 Golem Gem (corrupted),Situational,,,,,,
    Wharf,A Stone Perfected,5,Jewel Primordial 1-2 Implicit (corrupted),Situational,,,,,,
    Wharf,The Primordial,5,Jewel (Primordial unique),Situational,,,,,,
    Wharf,The Catch,18,Fishing Rod Incubated iLvl100,GodTier,https://www.poewiki.net/wiki/Fishing_Rod,,,,,
    Wharf,The Old Man,12,Fishing Rod Two-Implicit (corrupted),GodTier,https://www.poewiki.net/wiki/Fishing_Rod,,,,,
    Wharf,The Journey,3,Harbinger's Orb,Situational,,,,,,
    Acton's Nightmare,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Acton's Nightmare,The Gambler,5,Divination Card,Meh,,,,,,
    Acton's Nightmare,The Wilted Rose,7,L21 Aura Gem (corrupted),Situational,,,,,,
    Acton's Nightmare,The Wretched,6,Belt,Situational,,,,,,
    Altered Distant Memory,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Altered Distant Memory,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Altered Distant Memory,The Gambler,5,Divination Card,Meh,,,,,,
    Altered Distant Memory,The Lord of Celebration,4,Sceptre of Celebration Shaper Item,Situational,,,,,,
    Altered Distant Memory,The Trial,7,Map T15 (corrupted),Situational,,,,,,
    Augmented Distant Memory,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Augmented Distant Memory,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Augmented Distant Memory,The Gambler,5,Divination Card,Meh,,,,,,
    Augmented Distant Memory,The Lord of Celebration,4,Sceptre of Celebration Shaper Item,Situational,,,,,,
    Augmented Distant Memory,The Trial,7,Map T15 (corrupted),Situational,,,,,,
    Caer Blaidd Wolfpacks Den,The Cursed King,8,Rigwald's Curse,Situational,https://www.poewiki.net/wiki/Rigwald%27s_Curse,,,,,
    Caer Blaidd Wolfpacks Den,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Caer Blaidd Wolfpacks Den,The Gambler,5,Divination Card,Meh,,,,,,
    Caer Blaidd Wolfpacks Den,The Trial,7,Map T15 (corrupted),Situational,,,,,,
    Cortex,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Cortex,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Cortex,The Gambler,5,Divination Card,Meh,,,,,,
    Cortex,The Lord of Celebration,4,Sceptre of Celebration Shaper Item,Situational,,,,,,
    Cortex,The Trial,7,Map T15 (corrupted),Situational,,,,,,
    Death and Taxes,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Death and Taxes,The Gambler,5,Divination Card,Meh,,,,,,
    Doryani's Mechinarium,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Hall of Grandmasters,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Hall of Grandmasters,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Hall of Grandmasters,The Gambler,5,Divination Card,Meh,,,,,,
    Hall of Grandmasters,The Immortal,10,House of Mirrors,Situational,https://www.poewiki.net/wiki/House_of_Mirrors,,,,,
    Hallowed Ground,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Hallowed Ground,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Hallowed Ground,The Gambler,5,Divination Card,Meh,,,,,,
    Oba's Cursed Trove,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Oba's Cursed Trove,The Gambler,5,Divination Card,Meh,,,,,,
    Olmec's Sanctum,Grave Knowledge,6,Summon Raging Spirit 20% Qual,Situational,,,,,,
    Olmec's Sanctum,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Olmec's Sanctum,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Olmec's Sanctum,The Forsaken,7,Umbilicus Immortalis,Situational,https://www.poewiki.net/wiki/Umbilicus_Immortalis,,,,,
    Olmec's Sanctum,The Gambler,5,Divination Card,Meh,,,,,,
    Pillars of Arun/Replica,Imperial Legacy,22,6L Imperial Bow iLvl 100,UsefulAF,,,,,,
    Pillars of Arun/Replica,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Pillars of Arun/Replica,The Gambler,5,Divination Card,Meh,,,,,,
    Poorjoy's Asylum/Replica,Chaotic Disposition,1,5x Chaos Orb,Situational,,,,,,
    Poorjoy's Asylum/Replica,Deadly Joy,,Torrent's Reclamation Two-Implicit (corrupted),Situational,https://www.poewiki.net/wiki/The_Torrent%27s_Reclamation,,,,,
    Poorjoy's Asylum/Replica,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    Poorjoy's Asylum/Replica,The Army of Blood,6,Bloodbond,Situational,https://www.poewiki.net/wiki/Bloodbond,,,,,
    Poorjoy's Asylum/Replica,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Poorjoy's Asylum/Replica,The Fiend,11,Headhunter (corrupted),Situational,https://www.poewiki.net/wiki/Headhunter,,,,,
    Poorjoy's Asylum/Replica,The Gambler,5,Divination Card,Meh,,,,,,
    Poorjoy's Asylum/Replica,The Last Supper,6,Bino's Kitchen Knife,Situational,https://www.poewiki.net/wiki/Bino%27s_Kitchen_Knife,,,,,
    Rerwitten Distant Memory,Her Mask,4,Sacrifice Fragment,ActualGabrage,,,,,,
    Rerwitten Distant Memory,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    Rerwitten Distant Memory,The Gambler,5,Divination Card,Meh,,,,,,
    Rerwitten Distant Memory,The Lord of Celebration,4,Sceptre of Celebration Shaper Item,Situational,,,,,,
    Rerwitten Distant Memory,The Trial,7,Map T15 (corrupted),Situational,,,,,,
    The Cowards Trial,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    The Cowards Trial,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    The Cowards Trial,The Forsaken,7,Umbilicus Immortalis,Situational,https://www.poewiki.net/wiki/Umbilicus_Immortalis,,,,,
    The Cowards Trial,The Gambler,5,Divination Card,Meh,,,,,,
    The Cowards Trial,The Wretched,6,Belt,Situational,,,,,,
    The Cowards Trial,The Rabbit's Foot,8,10x Incursion Vial,Situational,,,,,,
    The Putrid Cloister,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    The Putrid Cloister,The Gambler,5,Divination Card,Meh,,,,,,
    The Putrid Cloister,The Trial,7,Map T15 (corrupted),Situational,,,,,,
    The Twilight Temple,Dialla's Subjugation,7,Support Gem 23% Qual (corrupted),Situational,,,,,,
    The Twilight Temple,Haunting Shadows,4,Metamorph Item,Situational,,,,,,
    The Twilight Temple,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    The Twilight Temple,The Gambler,5,Divination Card,Meh,,,,,,
    The Twilight Temple,The Lunaris Priestess,5,Sire of Shards,Situational,https://www.poewiki.net/wiki/Sire_of_Shards,,,,,
    The Twilight Temple,The Sun,7,Rise of the Phoenix,Situational,https://www.poewiki.net/wiki/Rise_of_the_Phoenix,,,,,
    The Vinktar Square,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    The Vinktar Square,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    The Vinktar Square,The Gambler,5,Divination Card,Meh,,,,,,
    The Vaults of Atziri,Atziri's Arsenal,4,Weapon (corrupted),Situational,,,,,,
    The Vaults of Atziri,Her Mask,4,Sacrifice Fragment,ActualGarbage,,,,,,
    The Vaults of Atziri,The Adventuring Spirit,6,Victario's Influence,Situational,https://www.poewiki.net/wiki/Victario%27s_Influence,,,,,
    The Vaults of Atziri,The Cache,6,Jewellery,Situational,,,,,,
    The Vaults of Atziri,The Catalyst,3,1x Vaal Orb,Situational,,,,,,
    The Vaults of Atziri,The Damned,6,Soul Ripper,Situational,https://www.poewiki.net/wiki/Soul_Ripper,,,,,
    The Vaults of Atziri,The Encroaching Darkness,8,Map (corrupted unique),Situational,,,,,,
    The Vaults of Atziri,The Gambler,5,Divination Card,Meh,,,,,,
    The Vaults of Atziri,The Hoarder,12,Exalted Orb,Situational,,,,,,
    The Vaults of Atziri,The Inventor,6,10x Vaal Orb,Situational,,,,,,
    The Vaults of Atziri,The Opulent,5,Ring iLvl 100,Meh,,,,,,
    The Vaults of Atziri,The Queen,16,Atziri's Acuity,Situational,https://www.poewiki.net/wiki/Atziri%27s_Acuity,,,,,';